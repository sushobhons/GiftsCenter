trigger:
  branches:
    include:
      - main  # Adjust as needed

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'ikasco Subscription'
  resourceGroupName: 'dbIKASCO'
  scaleSetName: 'GiftsCenter'

steps:
- script: |
    echo "Listing files in $(Build.SourcesDirectory)"
    ls -R $(Build.SourcesDirectory)  # List files recursively
  displayName: 'List source directory'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: AzureCLI@2
  inputs:
    azureSubscription: '$(azureSubscription)'  # Your Azure subscription
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Install unzip on all instances in the VMSS
      az vmss run-command invoke --resource-group $resourceGroupName --name $scaleSetName --command-id RunShellScript --scripts "sudo apt-get update && sudo apt-get install -y unzip"
  displayName: 'Install unzip on all VMSS instances'

- task: AzureCLI@2
  inputs:
    azureSubscription: '$(azureSubscription)'  # Your Azure subscription
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Get the instance ID of the VM to target
      INSTANCE_ID=$(az vmss list-instances --resource-group $resourceGroupName --vmss-name $scaleSetName --query "[0].instanceId" -o tsv)

      # Upload the artifact to the VM instance
      az vm run-command invoke --resource-group $resourceGroupName --name $scaleSetName --instance-id $INSTANCE_ID --command-id RunShellScript --scripts "mkdir -p /var/www/html/ && echo 'Uploading files...' && unzip -o /var/www/html/$(Build.BuildId).zip -d /var/www/html/web"

      # Adjust permissions
      az vm run-command invoke --resource-group $resourceGroupName --name $scaleSetName --instance-id $INSTANCE_ID --command-id RunShellScript --scripts "chmod -R 777 /var/www/html/web"

  displayName: 'Deploy to VMSS'
