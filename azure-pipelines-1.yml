trigger:
  branches:
    include:
      - main  # Adjust as needed

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    echo "Listing files in $(Build.SourcesDirectory)"
    ls -R $(Build.SourcesDirectory)  # List files recursively
  displayName: 'List source directory'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: DownloadSecureFile@1
  inputs:
    secureFile: 'id_rsa'  # Name of your uploaded secure file

- script: |
    # Get the list of VM instances in the scale set
    instances=$(az vmss list-instances --resource-group $(resourceGroupName) --name $(scaleSetName) --query "[].id" -o tsv)
    
    # Loop through each instance and upload the artifact
    for instance in $instances; do
      instanceId=$(basename $instance)
      echo "Uploading artifact to instance $instanceId"
      
      # Get the public IP of the instance
      ipAddress=$(az vmss get-instance-view --resource-group $(resourceGroupName) --name $(scaleSetName) --instance-id $instanceId --query "ipConfigurations[0].publicIpAddress.id" -o tsv)
      ipAddress=$(az network public-ip show --ids $ipAddress --query "ipAddress" -o tsv)
      
      # Upload the ZIP file using scp
      chmod 600 $(Agent.TempDirectory)/id_rsa  # Set permissions for the private key
      scp -i $(Agent.TempDirectory)/id_rsa -o StrictHostKeyChecking=no $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip azureuser@$ipAddress:/var/$(Build.BuildId).zip
      
      # Unzip the file and set permissions
      ssh -i $(Agent.TempDirectory)/id_rsa -o StrictHostKeyChecking=no azureuser@$ipAddress "sudo apt-get update && sudo apt-get install -y unzip && sudo unzip -o /var/$(Build.BuildId).zip -d /var/www/html/web && sudo chmod -R 777 /var/www/html/"
    done
  displayName: 'Upload and Deploy to VMSS'
