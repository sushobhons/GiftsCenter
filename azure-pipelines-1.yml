trigger:
  branches:
    include:
      - main  # Adjust as needed

pool:
  vmImage: 'ubuntu-latest'  # or windows-latest if you're using Windows agents

variables:
  azureSubscription: 'ikasco Subscription'
  resourceGroupName: 'dbIKASCO'
  scaleSetName: 'GiftsCenter'
  StorageAccountName: 'ikascostorage'
  ContainerName: 'deploys'
steps:
#- checkout: self  # Check out the current repository

- script: |
    echo "Listing files in $(Build.SourcesDirectory)"
    ls -R $(Build.SourcesDirectory)  # List files recursively
  displayName: 'List source directory'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: AzureCLI@2
  inputs:
    azureSubscription: 'ikascoConn'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Upload the zip file to a storage account
      az storage blob upload \
        --account-name '$StorageAccountName' \
        --container-name '$ContainerName' \
        --name $(Build.BuildId).zip \
        --file $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      echo 'Upload the zip file to a storage account'
      
      # Get the SAS URL for the uploaded blob
      sas_url=$(az storage blob url \
        --account-name '$StorageAccountName' \
        --container-name '$ContainerName' \
        --name $(Build.BuildId).zip \
        --output tsv)
      echo 'Get the SAS URL for the uploaded blob'

      # Update the VMSS with the new package
      az vmss update-instances \
        --resource-group $resourceGroupName \
        --name $scaleSetName \
        --instance-ids '*'

      # Run a custom script extension to download and unzip the package on each instance
      az vmss extension set \
        --resource-group $resourceGroupName \
        --vmss-name $scaleSetName \
        --name CustomScript \
        --publisher Microsoft.Azure.Extensions \
        --settings "{\"fileUris\": [\"$sas_url\"], \"commandToExecute\": \"unzip -o /var/www/html/$(Build.BuildId).zip -d /var/www/html/web && chmod -R 777 /var/www/html/web\"}"
