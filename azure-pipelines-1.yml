trigger:
  branches:
    include:
      - main  # Adjust as needed

pool:
  vmImage: 'ubuntu-latest'  # or windows-latest if you're using Windows agents

variables:
  azureSubscription: 'ikascoConn'
  resourceGroupName: 'ikascoRG'
  scaleSetName: 'GiftsCenterVMSS'
  StorageAccountName: 'ikascostorage'
  ContainerName: 'deploys'

steps:
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: AzureCLI@2
  inputs:
    azureSubscription: '$(azureSubscription)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az storage blob upload \
        --account-name $(StorageAccountName) \
        --container-name $(ContainerName) \
        --name $(Build.BuildId).zip \
        --file $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip

- task: AzureCLI@2
  inputs:
    azureSubscription: '$(azureSubscription)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      instance_ids=$(az vmss list-instances --resource-group $(resourceGroupName) --name $(scaleSetName) --query "[].instanceId" --output tsv)
      for instance_id in $instance_ids; do
        echo "uploading to instance $instance_id"
        az vmss run-command invoke \
          --resource-group $(resourceGroupName) \
          --name $(scaleSetName) \
          --instance-id $instance_id \
          --command-id RunShellScript \
          --scripts "curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash && az storage blob download --account-name $(StorageAccountName) --container-name $(ContainerName) --name $(Build.BuildId).zip --file /var/www/html/$(Build.BuildId).zip"
      done
